services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      # Bind mount the workspace
      - ../:/workspace:cached
      # Use named volumes for performance
      - node-modules:/workspace/node_modules
      - next-cache:/workspace/.next
      - yarn-cache:/home/vscode/.cache/yarn
      # VS Code extensions
      - vscode-extensions:/home/vscode/.vscode-server/extensions
      - vscode-extensions-insiders:/home/vscode/.vscode-server-insiders/extensions
    
    # Overrides default command so things don't shut down after the process ends
    command: sleep infinity
    
    # Use bridge network for better service connectivity
    ports:
      - "3000:3000"
    
    # Environment variables
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - CHOKIDAR_USEPOLLING=true
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-devcontainer123}@postgres:5432/${POSTGRES_DB:-v1z3r_dev}
    
    # Dependencies
    depends_on:
      - redis
      - postgres
    
    # Capabilities for debugging (removed NET_ADMIN for security)
    cap_add:
      - SYS_PTRACE
    
    security_opt:
      - seccomp:unconfined
  
  # Optional: Redis service for development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --protected-mode no
    
  # Optional: PostgreSQL for future database needs
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-devcontainer123}
      - POSTGRES_DB=${POSTGRES_DB:-v1z3r_dev}
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  node-modules:
  next-cache:
  yarn-cache:
  vscode-extensions:
  vscode-extensions-insiders:
  redis-data:
  postgres-data: